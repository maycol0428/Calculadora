{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ACTIONS","evaluate","currentOperand","previousOperand","operation","prev","parseFloat","current","isNaN","computation","add","subtract","multiply","divide","format","precision","toString","reducer","state","type","payload","overwrite","digit","includes","length","slice","DigitButton","dispatch","onClick","OperationButton","App","useReducer","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.673d9a57.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport \"./styles.css\";\r\nimport { useReducer } from \"react\";\r\nimport { add, divide, format, multiply, subtract } from \"mathjs\";\r\nconst ACTIONS = {\r\n  ADD_DIGIT: \"add-digit\",\r\n  CHOOSE_OPERATION: \"choose-operation\",\r\n  CLEAR: \"clear\",\r\n  DELETE_DIGIT: \"delete-digit\",\r\n  EVALUATE: \"evaluate\",\r\n};\r\n// const INTEGER_FORMATTER = new Intl.NumberFormat(\"es-pe\", {\r\n//   maximumFractionDigits: 0,\r\n// });\r\n// function formatOperand(operand) {\r\n//   if (operand == null) return;\r\n//   const [integer, decimal] = operand.split(\".\");\r\n//   if (decimal == null) return INTEGER_FORMATTER.format(integer);\r\n//   return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\r\n// }\r\n\r\nfunction evaluate({ currentOperand, previousOperand, operation }) {\r\n  const prev = parseFloat(previousOperand);\r\n  const current = parseFloat(currentOperand);\r\n  if (isNaN(prev) || isNaN(current)) return \"\";\r\n  let computation = \"\";\r\n  switch (operation) {\r\n    case \"+\":\r\n      computation = add(prev, current);\r\n      break;\r\n    case \"-\":\r\n      computation = subtract(prev, current);\r\n      break;\r\n    case \"*\":\r\n      computation = multiply(prev, current);\r\n      break;\r\n    case \"รท\":\r\n      computation = divide(prev, current);\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n\r\n  const result = format(computation, { precision: 14 }).toString();\r\n\r\n  return result;\r\n}\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case ACTIONS.ADD_DIGIT:\r\n      if (state.overwrite) {\r\n        return {\r\n          ...state,\r\n          currentOperand: payload.digit === \".\" ? \"0.\" : payload.digit,\r\n          overwrite: false,\r\n        };\r\n      }\r\n      if (payload.digit === \".\" && !state.currentOperand) {\r\n        return {\r\n          ...state,\r\n          currentOperand: `0${payload.digit}`,\r\n        };\r\n      }\r\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") return state;\r\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) return state;\r\n      return {\r\n        ...state,\r\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\r\n      };\r\n    case ACTIONS.CHOOSE_OPERATION:\r\n      if (state.currentOperand == null && state.previousOperand == null) {\r\n        return state;\r\n      }\r\n      if (state.currentOperand == null) {\r\n        return {\r\n          ...state,\r\n          operation: payload.operation,\r\n        };\r\n      }\r\n\r\n      if (state.previousOperand == null) {\r\n        return {\r\n          ...state,\r\n          operation: payload.operation,\r\n          previousOperand: state.currentOperand,\r\n          currentOperand: null,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        previousOperand: evaluate(state),\r\n        operation: payload.operation,\r\n        currentOperand: null,\r\n      };\r\n\r\n    case ACTIONS.CLEAR:\r\n      return {};\r\n    case ACTIONS.DELETE_DIGIT:\r\n      if (state.overwrite) {\r\n        return {};\r\n      }\r\n      if (state.currentOperand == null || state.currentOperand.length === 1) {\r\n        return { ...state, currentOperand: null };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentOperand: state.currentOperand.slice(0, -1),\r\n      };\r\n    case ACTIONS.EVALUATE:\r\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) return state;\r\n      return {\r\n        ...state,\r\n        overwrite: true,\r\n        previousOperand: null,\r\n        operation: null,\r\n        currentOperand: evaluate(state),\r\n      };\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\nfunction DigitButton({ dispatch, digit }) {\r\n  return <button onClick={() => dispatch({ type: ACTIONS.ADD_DIGIT, payload: { digit } })}>{digit}</button>;\r\n}\r\nfunction OperationButton({ dispatch, operation }) {\r\n  return <button onClick={() => dispatch({ type: ACTIONS.CHOOSE_OPERATION, payload: { operation } })}>{operation}</button>;\r\n}\r\nfunction App() {\r\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(reducer, {});\r\n  return (\r\n    <div className=\"calculator-grid\">\r\n      <div className=\"output\">\r\n        <div className=\"previous-operand\">\r\n          {previousOperand}\r\n          {operation}\r\n        </div>\r\n        <div className=\"current-operand\">{currentOperand}</div>\r\n      </div>\r\n      <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.CLEAR })}>\r\n        AC\r\n      </button>\r\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>DEL</button>\r\n      <OperationButton operation=\"รท\" dispatch={dispatch}></OperationButton>\r\n      <DigitButton digit=\"1\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\r\n      <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\r\n      <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\r\n      <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\r\n      <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\r\n      <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\r\n      <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\r\n      <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\r\n      <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.EVALUATE })}>\r\n        =\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}